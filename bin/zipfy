#!/usr/bin/env ruby

#using http://robdodson.me/how-to-write-a-command-line-ruby-gem/
require 'getoptlong'
require 'zipfy'
include Zipfy

verbose = false
save_path = nil
overwrite_save = false
excerpt = nil

opts = GetoptLong.new(
    [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
    [ '--save', '-s', GetoptLong::REQUIRED_ARGUMENT ],
    [ '--verbose', '-v', GetoptLong::NO_ARGUMENT ],
    [ '--excerpt', '-e', GetoptLong::REQUIRED_ARGUMENT ]
)



opts.each do |opt, arg|
    case opt
    when '--help'
        puts <<-EOF
Usage: zipf [FILE]

FILE:
    the file the analyze

-h, --help:
   show help

-v, --verbose:
   show table of calculations

-s, --save:
    save output of verbose to a file.

-f --force:
    overwrite save file if one already exists

-e --excerpt:
    analyzes the string passed as an excerpt
    
EOF
exit 
    when '--verbose'
        verbose = true
    when '--save'
        save_path = arg
    when '--force'
        overwrite_save = true
    when '--excerpt'
        excerpt = arg
    end
end

file_path =  ARGV[0]
if !file_path && !excerpt 
    STDERR.puts "Please specify a file or excerpt to evaluate. Run zipf -h for more information"
    exit
end
if file_path && excerpt
    STDERR.puts "Please specify either a file or an excerpt, not both"
    exit
end

z = Zipf.new

if excerpt 
    z.create_distribution(excerpt.split(" "))
else
    z.create_distribution( z.load_file file_path)
end
z.sort_distribution
z.calculate_zipfness
z.puts_distribution if verbose
z.save_dist_to_file save_path, overwrite_save if save_path
puts z.calculate_std_dev_from_reg
